name: CI/CD Deploy to Render

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run Unit Tests with Maven
        run: mvn test

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -f Dockerfile.backend -t tungaris/ip-backend-docker:latest .

      - name: Push Docker image to Docker Hub
        run: docker push tungaris/ip-backend-docker:latest

  sonar-analysis:
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify sonar:sonar \
            -Dsonar.projectKey=TungAris77_ip-be \
            -Dsonar.organization=tungaris77 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  deploy:
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    needs: [build-and-test, sonar-analysis]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Deploy on Render
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
